#!/usr/bin/env python
# -*- coding: utf-8 -*-

#import json
import requests
import pandas as pd
import numpy as np
from TravelDashboard.data_preprocessing import preproc_flight_data
#path = '/home/jonas_pieper/project/api_call/output/'


def call_flight_api(path, opensky_DB, seat_data, aircraftregister_US):

    #Call OpenSky API to receive current status of all aircrafts
    response = requests.get("https://opensky-network.org/api/states/all").json()

    # Define column names for dataframe
    col_names=['icao24','callsign','origin_country','time_position','last_contact','long','lat','baro_altitude','on_ground','velocity',
    'true_track','vertical_rate','sensors','geo_altitude','squawk','spi','position_source', "drop"]

    # Create Dataframe
    flights = pd.DataFrame(response["states"], columns=col_names)
    flights['time'] = response['time'] #add time column and set to time of API call

    # Drop columns & rows which are not required
    flights.drop(columns=["time_position", "last_contact", "sensors", "squawk", "spi", "position_source", "drop"], inplace=True) # drop columns
    flights.dropna(subset=['lat', "long", "icao24"], inplace=True) #drop rows where lat or long or icao24 is NaN -> can not be used for further processing

    # Preprocess flight data
    print("Start preprocessing ...")
    pflights_df_final = preproc_flight_data(flights, opensky_DB, seat_data, aircraftregister_US)
    print("Preprocessing finished")

    # Store preprocessed DataFrame to csv
    pflights_df_final.to_csv(path+f"{response['time']}.csv")
    print(f'''Final DataFrame stored as .csv under {path}{response['time']}.csv''')


if __name__ == "__main__":
    #Set path to store data
    path = "raw_data/preproc_data_test/"

    # Load required databases for matching/ preprocessing
    seat_data = pd.read_csv("TravelDashboard/data/seats_p_aircraft_final.csv",
                            index_col=0)
    aircraftregister_US = pd.read_csv(
        "TravelDashboard/data/US_ReleasableAircraftRegister.csv",
        index_col=0,
        low_memory=False)
    opensky_DB = pd.read_csv("TravelDashboard/data/OpenSky_AircraftDatabase.csv")

    call_flight_api(path, opensky_DB, seat_data, aircraftregister_US)
